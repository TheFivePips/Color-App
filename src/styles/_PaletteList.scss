@use './_BreakPoints';
@use './_TransitionGroup';


.fade-exit{
    opacity: map-get(TransitionGroup.$fade-exit, opacity);
}
.fade-exit-active{
    opacity: map-get(TransitionGroup.$fade-exit-active, "opacity" );
    transition: map-get(TransitionGroup.$fade-exit-active, "transition" )

}


.palette-list{
    background-color: blue;
    height: 100vh;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    overflow: scroll;
    background-image: url(../images/radiant-gradient.svg);
    /* background by SVGBackgrounds.com */

    .pl-container{
        width: 50%;
        display: flex;
        align-items: flex-start;
        flex-direction: column;
        flex-wrap: wrap;
        @media (max-width: #{map-get(BreakPoints.$breakpoints, xl)}){
            width: 80%;
            
        }
        @media (max-width: #{map-get(BreakPoints.$breakpoints, xs)}){
            width: 70%;
            
        }
        .pl-heading{
            font-size: 2rem;
        }
        
        .pl-nav{
            display: flex;
            width: 100%;
            justify-content: space-between;
            color: white;
            align-items: center;

            a{
                color: white;
            }
        }
        .pl-palettes{
            box-sizing: border-box;
            width: 100%;
            display: grid;
            grid-template-columns: repeat(3, 30%);
            grid-gap: 1rem;
            @media (max-width: #{map-get(BreakPoints.$breakpoints, md)}){
                grid-template-columns: repeat(2,50%);
            }
            @media (max-width: #{map-get(BreakPoints.$breakpoints, xs)}){
                grid-template-columns: repeat(1, 100%);
            }
            
        }
    }
}


